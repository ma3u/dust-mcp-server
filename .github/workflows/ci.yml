name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**/*.md'
      - '**/*.mdx'
      - '**/.gitignore'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**/*.md'
      - '**/*.mdx'
      - '**/.gitignore'

# Environment variables available to all jobs and steps in this workflow
env:
  NODE_ENV: test
  CI: true

jobs:
  test:
    name: Test (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run linting
        run: npm run lint

      - name: Run unit tests with coverage
        run: |
          npm test -- --coverage --coverageReporters=json-summary
          cat coverage/coverage-summary.json

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          fail_ci_if_error: false

      - name: Run build
        run: npm run build

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/


  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'dust-mcp-server'
          path: '.'
          format: 'HTML'
          fail_on_cvss_above: 7

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: dependency-check-report.html

  performance:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Build application
        run: npm run build

      - name: Install autocannon
        run: npm install -g autocannon

      - name: Start server in background
        run: |
          npm start &
          echo $! > server.pid
          sleep 5 # Wait for server to start

      - name: Run performance test
        run: |
          autocannon -d 30 -c 10 --json http://localhost:3000 > results.json
          cat results.json

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: results.json

      - name: Stop server
        if: always()
        run: kill $(cat server.pid) || true
